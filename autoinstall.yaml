#cloud-config
autoinstall:
  version: 1

  identity:
    hostname: elgentos-ubuntu-p14s
    username: elgentos
    password: "$6$06Ot4bgyw5j3L8Dn$N8o2btGghAI0KynX4Mab7krf.9Z/mtAyWrftK26d8Z8zSLzxgxuqwm7ArRXrV6iwMTWwF4GUS3ZfdEvA/YWIl0"  # elgentos123

  shutdown: poweroff

  reboot: true

  timezone: Europe/Amsterdam

  keyboard:
    layout: us

  drivers:
    install: true

  ssh:
    install-server: true
    allow-pw: true
    
  storage:
    layout:
      name: lvm
      password: pleasechangemeasap

  interactive-sections:
    - network
    - identity

  packages:
    - build-essential
    - composer
    - dnsutils
    - firefox
    - fonts-powerline
    - gimp
    - git
    - gpg
    - gnome-shell-extensions
    - htop
    - httrack
    - jq
    - lsb-release
    - multitail
    - ncdu
    - silversearcher-ag
    - tig
    - traceroute
    - ubuntu-desktop
    - ufw
    - vim
    - vlc
    - wget
    - xclip
    - zsh

  snaps:
    - name: chromium
    - name: discord
    - name: firefox
    - name: gcolor3
    - name: postman
    - name: phpstorm
    - name: spotify
    - name: sqlitebrowser
    - name: steam
    - name: slack

  late-commands:
    # Resize 100GB partition to full space available
    - curtin in-target --target=/target -- lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
    - curtin in-target --target=/target -- resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
  
    # Install Brave
    - curtin in-target --target=/target -- bash -c "wget -qO- https://dl.brave.com/install.sh | sh"
  
    # Installing Warp
    - curtin in-target --target=/target -- bash -c "wget --content-disposition -O /tmp/warp.deb 'https://app.warp.dev/download?package=deb' && dpkg -i /tmp/warp.deb"

    # Raise inotify watches limit
    - curtin in-target --target=/target -- sh -c 'echo "fs.inotify.max_user_watches=524288" >> /etc/sysctl.conf'
    - curtin in-target --target=/target -- sh -c 'echo "fs.inotify.max_user_instances=512" >> /etc/sysctl.conf'
    - curtin in-target --target=/target -- sh -c 'sysctl -p'
  
    # Installing 1password-cli
    - curtin in-target --target=/target -- bash -c '
      apt-get update && apt-get install -y curl gpg &&
      curl -sS https://downloads.1password.com/linux/keys/1password.asc |
      gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg &&
      echo "deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main" |
      tee /etc/apt/sources.list.d/1password.list &&
      apt update &&
      apt install -y 1password'

    # Install docker and docker compose plugin
    - curtin in-target --target=/target -- bash -c '
      apt update &&
      apt install -y ca-certificates curl &&
      install -m 0755 -d /etc/apt/keyrings &&
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc &&
      chmod a+r /etc/apt/keyrings/docker.asc &&
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo ${UBUNTU_CODENAME:-$VERSION_CODENAME}) stable" |
      tee /etc/apt/sources.list.d/docker.list > /dev/null &&
      apt update &&
      apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin'

    # Install oh-my-zsh
    - curtin in-target --target=/target -- bash -c "wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash"
  
    # Install nvm
    - curtin in-target --target=/target -- bash -c "wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash"

    # Installing Gnome extensions
    #- curtin in-target --target=/target -- gnome-extensions enable clipboard-indicator@tudmotu.com
    #- curtin in-target --target=/target -- gnome-extensions enable caffeine@patapon.info
    #- curtin in-target --target=/target -- gnome-extensions enable donotdisturbwhilecall@janlaping.de

    # Generate SSH key
    - curtin in-target --target=/target -- bash -c '
      USERNAME=$(getent passwd 1000 | cut -d':' -f1);
      USER_HOME="/home/$USERNAME";
      echo "Detected user $USERNAME";
      if [ -d "$USER_HOME" ]; then
        sudo -u $USERNAME mkdir -p "$USER_HOME/.ssh";
        sudo -u $USERNAME ssh-keygen -t rsa -b 4096 -C "$USERNAME@elgentos.nl" -f "$USER_HOME/.ssh/id_rsa" -N "";
        sudo -u $USERNAME chmod 700 "$USER_HOME/.ssh";
        sudo -u $USERNAME chmod 600 "$USER_HOME/.ssh/id_rsa";
        sudo -u $USERNAME chmod 644 "$USER_HOME/.ssh/id_rsa.pub";
        echo "SSH key generated for $USERNAME";
      fi'

    - curtin in-target --target=/target -- bash -c '
      echo "Installation paused. Create /tmp/continue to proceed.";
      while [ ! -f /tmp/continue ]; do sleep 5; done'
